"use client";

import { useState, useEffect } from "react";
import { cn } from "@/lib/utils";
import { fetchActiveRssFeeds } from "@/lib/api";

interface RssItem {
  title: string;
  link: string;
  pubDate?: string;
  source?: string;
}

interface RssTickerProps {
  className?: string;
}

export function RssTicker({ className }: RssTickerProps) {
  const [news, setNews] = useState<RssItem[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchRssNews = async () => {
      try {
        setLoading(true);

        // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è RSS-–ª–µ–Ω—Ç—ã
        const mockNews: RssItem[] = [
          {
            title: "–£—á–µ–Ω—ã–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–æ–≤—ã–π —Ç–∏–ø —á–µ—Ä–Ω—ãÔøΩÔøΩ –¥—ã—Ä –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–∞–ª–∞–∫—Ç–∏–∫–∏",
            link: "#",
            pubDate: new Date().toISOString(),
            source: "Naked Science",
          },
          {
            title:
              "–†–æ—Å—Å–∏–π—Å–∫–∏–µ —Ñ–∏–∑–∏–∫–∏ —Å–æ–∑–¥–∞–ª–∏ –∫–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è",
            link: "#",
            pubDate: new Date(Date.now() - 3600000).toISOString(),
            source: "Naked Science",
          },
          {
            title:
              "–ù–∞–π–¥–µ–Ω —Å–ø–æ—Å–æ–± —É–≤–µ–ª–∏—á–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –±–∞—Ç–∞—Ä–µ–π –Ω–∞ 40%",
            link: "#",
            pubDate: new Date(Date.now() - 7200000).toISOString(),
            source: "Naked Science",
          },
          {
            title:
              "–ú–∞—Ä—Å–æ—Ö–æ–¥ Perseverance –æ–±–Ω–∞—Ä—É–∂–∏–ª —Å–ª–µ–¥—ã –¥—Ä–µ–≤–Ω–µ–π –∂–∏–∑–Ω–∏ –Ω–∞ –ú–∞—Ä—Å–µ",
            link: "#",
            pubDate: new Date(Date.now() - 10800000).toISOString(),
            source: "Naked Science",
          },
          {
            title:
              "–ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –ª–µ—á–µ–Ω–∏—è —Ä–∞–∫–∞ –ø–æ–∫–∞–∑–∞–ª —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ 95% —Å–ª—É—á–∞–µ–≤",
            link: "#",
            pubDate: new Date(Date.now() - 14400000).toISOString(),
            source: "Naked Science",
          },
        ];

        setNews(mockNews);
      } catch (error) {
        console.error("Error fetching RSS feeds:", error);
        setNews([]);
      } finally {
        setLoading(false);
      }
    };

    fetchRssNews();

    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
    const interval = setInterval(fetchRssNews, 15 * 60 * 1000);

    return () => clearInterval(interval);
  }, []);

  if (loading || news.length === 0) {
    return null;
  }

  return (
    <div
      className={cn(
        "bg-gradient-to-r from-blue-600 to-blue-800 text-white py-3 overflow-hidden",
        className,
      )}
    >
      <div className="flex items-center h-8">
        <div className="font-bold mr-6 px-4 whitespace-nowrap bg-blue-900 rounded-r-full flex items-center">
          <span className="text-yellow-300 mr-2">üì°</span>
          –ù–û–í–û–°–¢–ò –ù–ê–£–ö–ò
        </div>
        <div className="ticker-container overflow-hidden relative w-full">
          <div className="ticker-content whitespace-nowrap animate-scroll">
            {news.concat(news).map((item, index) => (
              <span
                key={index}
                className="mx-8 font-medium hover:text-blue-200 cursor-pointer transition-colors"
              >
                <span className="text-yellow-300 mr-2">üî¨</span>
                <span className="font-semibold">{item.source}</span>:{" "}
                {item.title}
                <span className="mx-4 text-blue-300">‚Ä¢</span>
              </span>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∞–∫–∂–µ –ø–æ–¥ —Å—Ç–∞—Ä—ã–º –∏–º–µ–Ω–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export { RssTicker as RSSTicker };
