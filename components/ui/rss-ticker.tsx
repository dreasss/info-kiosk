"use client"

import { useState, useEffect } from "react"
import { cn } from "@/lib/utils"

interface RSSTickerProps {
  className?: string
}

interface RSSItem {
  title: string
  link: string
  pubDate: string
}

export function RSSTicker({ className }: RSSTickerProps) {
  const [news, setNews] = useState<RSSItem[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const fetchRSSFeed = async () => {
      try {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ RSS API
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫-–¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–∏–ª–µ Naked Science
        const mockNews: RSSItem[] = [
          {
            title: "–£—á–µ–Ω—ã–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–æ–≤—ã–π —Ç–∏–ø –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —á–∞—Å—Ç–∏—Ü –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö",
            link: "#",
            pubDate: new Date().toISOString(),
          },
          {
            title: "–ü—Ä–æ—Ä—ã–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ —Ç–µ—Ä–º–æ—è–¥–µ—Ä–Ω–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞: –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ä–µ–∫–æ—Ä–¥–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
            link: "#",
            pubDate: new Date().toISOString(),
          },
          {
            title: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏",
            link: "#",
            pubDate: new Date().toISOString(),
          },
          {
            title: "–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞ —Ä–∞–±–æ—Ç—ã –î–ù–ö –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –º–µ–¥–∏—Ü–∏–Ω—É",
            link: "#",
            pubDate: new Date().toISOString(),
          },
          {
            title: "–§–∏–∑–∏–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º—ã –º–∞—Ç–µ—Ä–∏–∏",
            link: "#",
            pubDate: new Date().toISOString(),
          },
        ]

        setNews(mockNews)
      } catch (error) {
        console.error("Error fetching RSS feed:", error)
        setNews([
          {
            title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –û–ò–Ø–ò",
            link: "#",
            pubDate: new Date().toISOString(),
          },
        ])
      } finally {
        setLoading(false)
      }
    }

    fetchRSSFeed()
  }, [])

  if (loading) {
    return (
      <div className={cn("bg-gradient-to-r from-blue-700 to-blue-800 text-white py-3 overflow-hidden", className)}>
        <div className="flex items-center justify-center h-8">
          <div className="animate-pulse bg-white/20 h-4 w-48 rounded"></div>
        </div>
      </div>
    )
  }

  if (news.length === 0) {
    return null
  }

  return (
    <div
      className={cn("bg-gradient-to-r from-blue-700 to-blue-800 text-white py-3 overflow-hidden relative", className)}
    >
      <div className="flex items-center h-8">
        <div className="font-bold mr-6 px-4 whitespace-nowrap bg-blue-900 rounded-r-full flex items-center">
          <span className="text-yellow-300 mr-2">üì°</span>
          –ù–û–í–û–°–¢–ò –ù–ê–£–ö–ò
        </div>
        <div className="ticker-container overflow-hidden relative w-full">
          <div className="ticker-content whitespace-nowrap animate-scroll">
            {news.concat(news).map((item, index) => (
              <span key={index} className="mx-8 font-medium hover:text-blue-200 cursor-pointer transition-colors">
                <span className="text-yellow-300 mr-2">üî¨</span>
                {item.title}
                <span className="mx-4 text-blue-300">‚Ä¢</span>
              </span>
            ))}
          </div>
        </div>
      </div>
    </div>
  )
}
